{"version":3,"sources":["components/Header.js","components/Form.js","components/Tarea.js","components/ListaTareas.js","App.js","index.js"],"names":["Header","mostrarCompletadas","cambiarMostrarCompletadas","toggleCompletada","className","onClick","icon","faEyeSlash","faEye","Form","tareas","cambiarTareas","useState","inputTarea","cambiarInputTarea","action","onSubmit","e","preventDefault","id","uuidv4","texto","completada","type","placeholder","value","onChange","target","handleInput","faPlusSquare","Tarea","tarea","editarTarea","borrarTarea","editandoTarea","cambiarTarea","nuevaTarea","cambiarNuevaTarea","faCheckSquare","faSquare","faEdit","faTimes","ListaTareas","map","nuevoTexto","filter","length","App","tareasGuardadas","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","configMostrarCompletadas","toString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c7eac7d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Header = ({mostrarCompletadas, cambiarMostrarCompletadas}) => {\r\n    const toggleCompletada = () => {\r\n        cambiarMostrarCompletadas(!mostrarCompletadas);\r\n    }\r\n\r\n    return ( \r\n        <header className='header'>\r\n            <h1 className='header__title'>Lista de Tareas</h1>\r\n            {mostrarCompletadas ?\r\n                <button \r\n                    className='header__button'\r\n                    onClick={() => toggleCompletada()}\r\n                >\r\n                    No mostrar completadas\r\n                    <FontAwesomeIcon icon={faEyeSlash} className='header__icon-button' />\r\n                </button>\r\n            : \r\n                <button \r\n                    className='header__button'\r\n                    onClick={() => toggleCompletada()}\r\n                >\r\n                    Mostrar completadas\r\n                    <FontAwesomeIcon icon={faEye} className='header__icon-button' />\r\n                </button>\r\n            }\r\n            \r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Form = ({tareas, cambiarTareas}) => {\r\n    const [inputTarea, cambiarInputTarea] = useState('');\r\n\r\n    const handleInput = (e) => {\r\n        cambiarInputTarea(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        cambiarTareas(\r\n            [\r\n                ...tareas,\r\n                {\r\n                    id: uuidv4(),\r\n                    texto: inputTarea,\r\n                    completada: false\r\n                }\r\n            ]\r\n        );\r\n        cambiarInputTarea('');\r\n    }\r\n\r\n    return ( \r\n        <form action='' className='form' onSubmit={handleSubmit}>\r\n            <input \r\n                type='text' \r\n                className='form__input' \r\n                placeholder='Escribe una tarea' \r\n                value={inputTarea}\r\n                onChange={(e) => handleInput(e)}\r\n            \r\n            /> \r\n            <button type='submit' className='form__btn'>\r\n                <FontAwesomeIcon icon={faPlusSquare} className='form__btn-icon'/>\r\n            </button>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Form;\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckSquare, faEdit, faTimes, faSquare } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Tarea = ({tarea, toggleCompletada, editarTarea, borrarTarea}) => {\r\n    const [editandoTarea, cambiarTarea] = useState(false);\r\n    const [nuevaTarea, cambiarNuevaTarea] = useState(tarea.texto);\r\n   \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        editarTarea(tarea.id, nuevaTarea);\r\n        cambiarTarea(false);\r\n    }\r\n\r\n    return ( \r\n        <li className='lista-tareas__tarea'>\r\n            <FontAwesomeIcon \r\n                icon={tarea.completada ? faCheckSquare : faSquare} \r\n                className='lista-tareas__icono lista-tareas__icono-check'\r\n                onClick={() => toggleCompletada(tarea.id)}\r\n            />\r\n            <div className='lista-tareas__texto'>\r\n                {editandoTarea ?\r\n                <form action='' className='formulario-editar-tarea' onSubmit={handleSubmit}>\r\n                    <input \r\n                        type='text' \r\n                        className='formulario-editar-tarea__input' \r\n                        value={nuevaTarea}\r\n                        onChange={(e) => cambiarNuevaTarea(e.target.value)}\r\n                    />\r\n                    <button type='submit' className='formulario-editar-tarea__btn'>Actualizar</button>\r\n                </form>\r\n                : tarea.texto\r\n                }\r\n            </div>\r\n            <div className='lista-tareas__contenedor-botones'>\r\n                <FontAwesomeIcon \r\n                    icon={faEdit} \r\n                    className='lista-tareas__icono lista-tareas__icono-accion'\r\n                    onClick={() => cambiarTarea(!editandoTarea)}\r\n                />\r\n                <FontAwesomeIcon \r\n                    icon={faTimes} \r\n                    className='lista-tareas__icono lista-tareas__icono-accion'\r\n                    onClick={() => borrarTarea(tarea.id)}\r\n                />\r\n            </div>\r\n            \r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Tarea;","import React from 'react';\r\nimport Tarea from './Tarea';\r\n\r\nconst ListaTareas = ({tareas, cambiarTareas, mostrarCompletadas}) => {\r\n    const toggleCompletada = (id) => {\r\n        cambiarTareas(tareas.map((tarea) => {\r\n            if(tarea.id === id){\r\n                return {...tarea, completada: !tarea.completada}\r\n            }\r\n            return tarea;\r\n        }));\r\n    }\r\n\r\n    const editarTarea = (id, nuevoTexto) => {\r\n        cambiarTareas(tareas.map((tarea) => {\r\n            if(tarea.id === id){\r\n                return {...tarea, texto: nuevoTexto}\r\n            }\r\n            return tarea;\r\n        }));\r\n    }\r\n\r\n    const borrarTarea = (id) => {\r\n        cambiarTareas(tareas.filter((tarea) => {\r\n            if(tarea.id !== id){\r\n                return tarea;\r\n            }\r\n            return;\r\n        }));\r\n    }\r\n\r\n    return ( \r\n        <ul className='lista-tareas'>\r\n            {\r\n                tareas.length > 0 ? tareas.map((tarea) => {\r\n                    if(mostrarCompletadas){\r\n                         return <Tarea \r\n                                key={tarea.id}\r\n                                tarea={tarea}\r\n                                toggleCompletada={toggleCompletada}\r\n                                editarTarea={editarTarea}\r\n                                borrarTarea={borrarTarea}\r\n                           />\r\n                    //Si la tarea no esta completada, la devolvemos\r\n                    } else if (!tarea.completada){\r\n                        return <Tarea \r\n                                key={tarea.id}\r\n                                tarea={tarea}\r\n                                toggleCompletada={toggleCompletada}\r\n                                editarTarea={editarTarea}\r\n                                borrarTarea={borrarTarea}\r\n                           />\r\n                    }\r\n                    //Si la tarea ya esta completada, no se devuelve nada\r\n                    return;\r\n                })\r\n                : \r\n                <div className='lista-tareas__mensaje'> No hay tareas agregadas &#128554; </div>\r\n            }\r\n        </ul>\r\n     );\r\n}\r\n \r\nexport default ListaTareas;","import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport ListaTareas from './components/ListaTareas';\n\nconst App = () => {\n\n  //Se obtienen las tareas guardadas de LocalStorage\n  const tareasGuardadas =\n  localStorage.getItem('tareas') ?\n  JSON.parse(localStorage.getItem('tareas')) : [];\n\n  //Estamos estableciendo el estado de las tareas\n  const [tareas, cambiarTareas] = useState(tareasGuardadas);\n\n  //Guardando el estado dentro de LocalStorage\n  useEffect(() => {\n    localStorage.setItem('tareas', JSON.stringify(tareas));\n  }, [tareas]);\n\n  //Accedemos a localstorage y comprobamos si mostrarCompletadas es null\n  let configMostrarCompletadas = '';\n  if(localStorage.getItem('mostrarCompletadas') === null){\n    configMostrarCompletadas = true;\n  } else {\n    configMostrarCompletadas = localStorage.getItem('mostrarCompletadas') === 'true';\n  }\n\n  //Estado de mostrarCompletadas\n  const [mostrarCompletadas, cambiarMostrarCompletadas] = useState(configMostrarCompletadas);\n  useEffect(() => {\n    localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString());\n  }, [mostrarCompletadas]);\n  \n\n  return (\n    <div className='contenedor'>\n      <Header \n        mostrarCompletadas={mostrarCompletadas}\n        cambiarMostrarCompletadas={cambiarMostrarCompletadas}\n      />\n      <Form tareas={tareas} cambiarTareas={cambiarTareas}/>\n      <ListaTareas \n        tareas={tareas} \n        cambiarTareas={cambiarTareas}\n        mostrarCompletadas={mostrarCompletadas}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}